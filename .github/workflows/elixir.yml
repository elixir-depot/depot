name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: '1.11.4'
              otp: '22.2'
          - pair:
              elixir: '1.12.3'
              otp: '24.0'
            lint: lint

    # services:
    #   postgres:
    #     image: postgres:12
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{matrix.pair.elixir}}-${{matrix.pair.otp}}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.pair.otp}}
        elixir-version: ${{matrix.pair.elixir}}

    - run: mix deps.get

    - run: mix format --check-formatted
      if: ${{ matrix.lint }}

    - run: mix deps.unlock --check-unused
      if: ${{ matrix.lint }}

    - run: mix deps.compile

    - run: mix compile --warnings-as-errors
      if: ${{ matrix.lint }}
      
    - run: mix test